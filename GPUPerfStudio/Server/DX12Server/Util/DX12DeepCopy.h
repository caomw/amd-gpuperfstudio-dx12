//==============================================================================
// Copyright (c) 2015 Advanced Micro Devices, Inc. All rights reserved.
/// \author AMD Developer Tools Team
/// \file
/// \brief  A class that provides singleton access to copy utility functions.
//==============================================================================

#ifndef DX12DEEPCOPY_H
#define DX12DEEPCOPY_H

#include "Autogenerated/DX12CoreDeepCopy.h"
#include "../Common/TSingleton.h"

//--------------------------------------------------------------------------
/// A singleton instance that provides singleton access to copy utility
/// functions, and lets us override DeepCopy implementations.
//--------------------------------------------------------------------------
class DX12DeepCopy : public DX12CoreDeepCopy, public TSingleton< DX12DeepCopy >
{
    friend TSingleton < DX12DeepCopy >;
public:
    DX12DeepCopy() {}
    virtual ~DX12DeepCopy() {}

    void StringDeepCopy(LPCSTR inString, LPCSTR outString)
    {
        int length = lstrlen(inString);
        outString = new char[length + 1];
        //wsprintf(outString, "%s", inString);
    }

    template <class T>
    void AssignInterface(const T* inInterface, T** outInterface, bool inbUnwrapInterface = false)
    {
        *outInterface = const_cast<T*>(inInterface);

        if (inInterface != NULL)
        {
            if (inbUnwrapInterface)
            {
                GetUnwrapped((IUnknown**)outInterface);
            }
        }
    }
};

#endif // DX12DEEPCOPY_H
